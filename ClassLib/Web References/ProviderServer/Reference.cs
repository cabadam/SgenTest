//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ClassLib.ProviderServer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProviderServerSoap", Namespace="http://its.gov/c2c_webservices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConnectedComponent))]
    public partial class ProviderServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CancelSubscriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueueStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeepAliveOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueuedSubscribeNetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueuedSubscribeNetsBlockedOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestNetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestNetsBlockedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeNetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeNetsBlockedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProviderServer() {
            this.Url = global::ClassLib.Properties.Settings.Default.ClassLib_ProviderServer_ProviderServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CancelSubscriptionsCompletedEventHandler CancelSubscriptionsCompleted;
        
        /// <remarks/>
        public event GetCurrentStatusCompletedEventHandler GetCurrentStatusCompleted;
        
        /// <remarks/>
        public event GetQueueStatusCompletedEventHandler GetQueueStatusCompleted;
        
        /// <remarks/>
        public event KeepAliveCompletedEventHandler KeepAliveCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event QueuedSubscribeNetsCompletedEventHandler QueuedSubscribeNetsCompleted;
        
        /// <remarks/>
        public event QueuedSubscribeNetsBlockedCompletedEventHandler QueuedSubscribeNetsBlockedCompleted;
        
        /// <remarks/>
        public event RequestNetsCompletedEventHandler RequestNetsCompleted;
        
        /// <remarks/>
        public event RequestNetsBlockedCompletedEventHandler RequestNetsBlockedCompleted;
        
        /// <remarks/>
        public event SubscribeCompletedEventHandler SubscribeCompleted;
        
        /// <remarks/>
        public event SubscribeNetsCompletedEventHandler SubscribeNetsCompleted;
        
        /// <remarks/>
        public event SubscribeNetsBlockedCompletedEventHandler SubscribeNetsBlockedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/CancelSubscriptions", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CancelSubscriptions(string sSubscriptionDataTypes) {
            object[] results = this.Invoke("CancelSubscriptions", new object[] {
                        sSubscriptionDataTypes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSubscriptionsAsync(string sSubscriptionDataTypes) {
            this.CancelSubscriptionsAsync(sSubscriptionDataTypes, null);
        }
        
        /// <remarks/>
        public void CancelSubscriptionsAsync(string sSubscriptionDataTypes, object userState) {
            if ((this.CancelSubscriptionsOperationCompleted == null)) {
                this.CancelSubscriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSubscriptionsOperationCompleted);
            }
            this.InvokeAsync("CancelSubscriptions", new object[] {
                        sSubscriptionDataTypes}, this.CancelSubscriptionsOperationCompleted, userState);
        }
        
        private void OnCancelSubscriptionsOperationCompleted(object arg) {
            if ((this.CancelSubscriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSubscriptionsCompleted(this, new CancelSubscriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/GetCurrentStatus", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InfrastructureStatus GetCurrentStatus() {
            object[] results = this.Invoke("GetCurrentStatus", new object[0]);
            return ((InfrastructureStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentStatusAsync() {
            this.GetCurrentStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrentStatusAsync(object userState) {
            if ((this.GetCurrentStatusOperationCompleted == null)) {
                this.GetCurrentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentStatusOperationCompleted);
            }
            this.InvokeAsync("GetCurrentStatus", new object[0], this.GetCurrentStatusOperationCompleted, userState);
        }
        
        private void OnGetCurrentStatusOperationCompleted(object arg) {
            if ((this.GetCurrentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentStatusCompleted(this, new GetCurrentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/GetQueueStatus", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetQueueStatus() {
            object[] results = this.Invoke("GetQueueStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueueStatusAsync() {
            this.GetQueueStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetQueueStatusAsync(object userState) {
            if ((this.GetQueueStatusOperationCompleted == null)) {
                this.GetQueueStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueueStatusOperationCompleted);
            }
            this.InvokeAsync("GetQueueStatus", new object[0], this.GetQueueStatusOperationCompleted, userState);
        }
        
        private void OnGetQueueStatusOperationCompleted(object arg) {
            if ((this.GetQueueStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueueStatusCompleted(this, new GetQueueStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/KeepAlive", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool KeepAlive() {
            object[] results = this.Invoke("KeepAlive", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void KeepAliveAsync() {
            this.KeepAliveAsync(null);
        }
        
        /// <remarks/>
        public void KeepAliveAsync(object userState) {
            if ((this.KeepAliveOperationCompleted == null)) {
                this.KeepAliveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeepAliveOperationCompleted);
            }
            this.InvokeAsync("KeepAlive", new object[0], this.KeepAliveOperationCompleted, userState);
        }
        
        private void OnKeepAliveOperationCompleted(object arg) {
            if ((this.KeepAliveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeepAliveCompleted(this, new KeepAliveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/Login", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string sUpdatesURI) {
            object[] results = this.Invoke("Login", new object[] {
                        sUpdatesURI});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string sUpdatesURI) {
            this.LoginAsync(sUpdatesURI, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string sUpdatesURI, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        sUpdatesURI}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/Logout", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Logout() {
            object[] results = this.Invoke("Logout", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/QueuedSubscribeNets", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueuedSubscribeNets(string sSubscriptionDataTypes, string sNetworks) {
            this.Invoke("QueuedSubscribeNets", new object[] {
                        sSubscriptionDataTypes,
                        sNetworks});
        }
        
        /// <remarks/>
        public void QueuedSubscribeNetsAsync(string sSubscriptionDataTypes, string sNetworks) {
            this.QueuedSubscribeNetsAsync(sSubscriptionDataTypes, sNetworks, null);
        }
        
        /// <remarks/>
        public void QueuedSubscribeNetsAsync(string sSubscriptionDataTypes, string sNetworks, object userState) {
            if ((this.QueuedSubscribeNetsOperationCompleted == null)) {
                this.QueuedSubscribeNetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueuedSubscribeNetsOperationCompleted);
            }
            this.InvokeAsync("QueuedSubscribeNets", new object[] {
                        sSubscriptionDataTypes,
                        sNetworks}, this.QueuedSubscribeNetsOperationCompleted, userState);
        }
        
        private void OnQueuedSubscribeNetsOperationCompleted(object arg) {
            if ((this.QueuedSubscribeNetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueuedSubscribeNetsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/QueuedSubscribeNetsBlocked", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueuedSubscribeNetsBlocked(string sSubscriptionDataTypes, string sNetworks, string rejectedNetworks) {
            this.Invoke("QueuedSubscribeNetsBlocked", new object[] {
                        sSubscriptionDataTypes,
                        sNetworks,
                        rejectedNetworks});
        }
        
        /// <remarks/>
        public void QueuedSubscribeNetsBlockedAsync(string sSubscriptionDataTypes, string sNetworks, string rejectedNetworks) {
            this.QueuedSubscribeNetsBlockedAsync(sSubscriptionDataTypes, sNetworks, rejectedNetworks, null);
        }
        
        /// <remarks/>
        public void QueuedSubscribeNetsBlockedAsync(string sSubscriptionDataTypes, string sNetworks, string rejectedNetworks, object userState) {
            if ((this.QueuedSubscribeNetsBlockedOperationCompleted == null)) {
                this.QueuedSubscribeNetsBlockedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueuedSubscribeNetsBlockedOperationCompleted);
            }
            this.InvokeAsync("QueuedSubscribeNetsBlocked", new object[] {
                        sSubscriptionDataTypes,
                        sNetworks,
                        rejectedNetworks}, this.QueuedSubscribeNetsBlockedOperationCompleted, userState);
        }
        
        private void OnQueuedSubscribeNetsBlockedOperationCompleted(object arg) {
            if ((this.QueuedSubscribeNetsBlockedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueuedSubscribeNetsBlockedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/RequestNets", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestNets(string dataTypes, string networks) {
            object[] results = this.Invoke("RequestNets", new object[] {
                        dataTypes,
                        networks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestNetsAsync(string dataTypes, string networks) {
            this.RequestNetsAsync(dataTypes, networks, null);
        }
        
        /// <remarks/>
        public void RequestNetsAsync(string dataTypes, string networks, object userState) {
            if ((this.RequestNetsOperationCompleted == null)) {
                this.RequestNetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestNetsOperationCompleted);
            }
            this.InvokeAsync("RequestNets", new object[] {
                        dataTypes,
                        networks}, this.RequestNetsOperationCompleted, userState);
        }
        
        private void OnRequestNetsOperationCompleted(object arg) {
            if ((this.RequestNetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestNetsCompleted(this, new RequestNetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/RequestNetsBlocked", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RequestNetsBlocked(string dataTypes, string acceptedNetworks, string rejectedNetworks) {
            object[] results = this.Invoke("RequestNetsBlocked", new object[] {
                        dataTypes,
                        acceptedNetworks,
                        rejectedNetworks});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestNetsBlockedAsync(string dataTypes, string acceptedNetworks, string rejectedNetworks) {
            this.RequestNetsBlockedAsync(dataTypes, acceptedNetworks, rejectedNetworks, null);
        }
        
        /// <remarks/>
        public void RequestNetsBlockedAsync(string dataTypes, string acceptedNetworks, string rejectedNetworks, object userState) {
            if ((this.RequestNetsBlockedOperationCompleted == null)) {
                this.RequestNetsBlockedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestNetsBlockedOperationCompleted);
            }
            this.InvokeAsync("RequestNetsBlocked", new object[] {
                        dataTypes,
                        acceptedNetworks,
                        rejectedNetworks}, this.RequestNetsBlockedOperationCompleted, userState);
        }
        
        private void OnRequestNetsBlockedOperationCompleted(object arg) {
            if ((this.RequestNetsBlockedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestNetsBlockedCompleted(this, new RequestNetsBlockedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/Subscribe", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Subscribe(string sSubscriptionDataTypes, bool bPersistent) {
            object[] results = this.Invoke("Subscribe", new object[] {
                        sSubscriptionDataTypes,
                        bPersistent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeAsync(string sSubscriptionDataTypes, bool bPersistent) {
            this.SubscribeAsync(sSubscriptionDataTypes, bPersistent, null);
        }
        
        /// <remarks/>
        public void SubscribeAsync(string sSubscriptionDataTypes, bool bPersistent, object userState) {
            if ((this.SubscribeOperationCompleted == null)) {
                this.SubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeOperationCompleted);
            }
            this.InvokeAsync("Subscribe", new object[] {
                        sSubscriptionDataTypes,
                        bPersistent}, this.SubscribeOperationCompleted, userState);
        }
        
        private void OnSubscribeOperationCompleted(object arg) {
            if ((this.SubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeCompleted(this, new SubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/SubscribeNets", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubscribeNets(string sSubscriptionDataTypes, string sNetworks, bool bPersistent) {
            object[] results = this.Invoke("SubscribeNets", new object[] {
                        sSubscriptionDataTypes,
                        sNetworks,
                        bPersistent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeNetsAsync(string sSubscriptionDataTypes, string sNetworks, bool bPersistent) {
            this.SubscribeNetsAsync(sSubscriptionDataTypes, sNetworks, bPersistent, null);
        }
        
        /// <remarks/>
        public void SubscribeNetsAsync(string sSubscriptionDataTypes, string sNetworks, bool bPersistent, object userState) {
            if ((this.SubscribeNetsOperationCompleted == null)) {
                this.SubscribeNetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeNetsOperationCompleted);
            }
            this.InvokeAsync("SubscribeNets", new object[] {
                        sSubscriptionDataTypes,
                        sNetworks,
                        bPersistent}, this.SubscribeNetsOperationCompleted, userState);
        }
        
        private void OnSubscribeNetsOperationCompleted(object arg) {
            if ((this.SubscribeNetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeNetsCompleted(this, new SubscribeNetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://its.gov/c2c_webservices/SubscribeNetsBlocked", RequestNamespace="http://its.gov/c2c_webservices", ResponseNamespace="http://its.gov/c2c_webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubscribeNetsBlocked(string sSubscriptionDataTypes, string acceptedNetworks, string rejectedNetworks, bool bPersistent) {
            object[] results = this.Invoke("SubscribeNetsBlocked", new object[] {
                        sSubscriptionDataTypes,
                        acceptedNetworks,
                        rejectedNetworks,
                        bPersistent});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeNetsBlockedAsync(string sSubscriptionDataTypes, string acceptedNetworks, string rejectedNetworks, bool bPersistent) {
            this.SubscribeNetsBlockedAsync(sSubscriptionDataTypes, acceptedNetworks, rejectedNetworks, bPersistent, null);
        }
        
        /// <remarks/>
        public void SubscribeNetsBlockedAsync(string sSubscriptionDataTypes, string acceptedNetworks, string rejectedNetworks, bool bPersistent, object userState) {
            if ((this.SubscribeNetsBlockedOperationCompleted == null)) {
                this.SubscribeNetsBlockedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeNetsBlockedOperationCompleted);
            }
            this.InvokeAsync("SubscribeNetsBlocked", new object[] {
                        sSubscriptionDataTypes,
                        acceptedNetworks,
                        rejectedNetworks,
                        bPersistent}, this.SubscribeNetsBlockedOperationCompleted, userState);
        }
        
        private void OnSubscribeNetsBlockedOperationCompleted(object arg) {
            if ((this.SubscribeNetsBlockedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeNetsBlockedCompleted(this, new SubscribeNetsBlockedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class InfrastructureStatus {
        
        private string[] subscribedDataTypesField;
        
        private ClientComponent[] dataClientsField;
        
        private DataSourceComponent[] dataSourcesField;
        
        private Datatype[] dataStatusField;
        
        private Expansion[] expansionEntriesField;
        
        private int latitudeField;
        
        private SerializableUri locationField;
        
        private int longitudeField;
        
        private System.DateTime serviceStartTimeField;
        
        private ComponentStatus statusField;
        
        private ComponentType typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DataType")]
        public string[] SubscribedDataTypes {
            get {
                return this.subscribedDataTypesField;
            }
            set {
                this.subscribedDataTypesField = value;
            }
        }
        
        /// <remarks/>
        public ClientComponent[] DataClients {
            get {
                return this.dataClientsField;
            }
            set {
                this.dataClientsField = value;
            }
        }
        
        /// <remarks/>
        public DataSourceComponent[] DataSources {
            get {
                return this.dataSourcesField;
            }
            set {
                this.dataSourcesField = value;
            }
        }
        
        /// <remarks/>
        public Datatype[] DataStatus {
            get {
                return this.dataStatusField;
            }
            set {
                this.dataStatusField = value;
            }
        }
        
        /// <remarks/>
        public Expansion[] ExpansionEntries {
            get {
                return this.expansionEntriesField;
            }
            set {
                this.expansionEntriesField = value;
            }
        }
        
        /// <remarks/>
        public int Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public SerializableUri Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public int Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ServiceStartTime {
            get {
                return this.serviceStartTimeField;
            }
            set {
                this.serviceStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public ComponentStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public ComponentType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class ClientComponent : ConnectedComponent {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DataSourceComponent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientComponent))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class ConnectedComponent {
        
        private uint connectionAttemptsField;
        
        private System.DateTime connectionStartTimeField;
        
        private System.DateTime lastGoodKeepAliveField;
        
        private System.DateTime lastKeepAliveField;
        
        private SerializableUri locationField;
        
        private ComponentStatus statusField;
        
        /// <remarks/>
        public uint ConnectionAttempts {
            get {
                return this.connectionAttemptsField;
            }
            set {
                this.connectionAttemptsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ConnectionStartTime {
            get {
                return this.connectionStartTimeField;
            }
            set {
                this.connectionStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastGoodKeepAlive {
            get {
                return this.lastGoodKeepAliveField;
            }
            set {
                this.lastGoodKeepAliveField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastKeepAlive {
            get {
                return this.lastKeepAliveField;
            }
            set {
                this.lastKeepAliveField = value;
            }
        }
        
        /// <remarks/>
        public SerializableUri Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public ComponentStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class SerializableUri {
        
        private string absoluteUriField;
        
        /// <remarks/>
        public string AbsoluteUri {
            get {
                return this.absoluteUriField;
            }
            set {
                this.absoluteUriField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class Expansion {
        
        private string dataField;
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        public string Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class NetworkDataItem {
        
        private System.DateTime lastUpdateField;
        
        private int lastUpdateCountField;
        
        private string networkIDField;
        
        private uint totalStoredCountField;
        
        /// <remarks/>
        public System.DateTime LastUpdate {
            get {
                return this.lastUpdateField;
            }
            set {
                this.lastUpdateField = value;
            }
        }
        
        /// <remarks/>
        public int LastUpdateCount {
            get {
                return this.lastUpdateCountField;
            }
            set {
                this.lastUpdateCountField = value;
            }
        }
        
        /// <remarks/>
        public string NetworkID {
            get {
                return this.networkIDField;
            }
            set {
                this.networkIDField = value;
            }
        }
        
        /// <remarks/>
        public uint TotalStoredCount {
            get {
                return this.totalStoredCountField;
            }
            set {
                this.totalStoredCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class Datatype {
        
        private string dataTypeField;
        
        private NetworkDataItem[] networksField;
        
        /// <remarks/>
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public NetworkDataItem[] Networks {
            get {
                return this.networksField;
            }
            set {
                this.networksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public enum ComponentStatus {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public partial class DataSourceComponent : ConnectedComponent {
        
        private ComponentType typeField;
        
        private string[] includeNetIdsField;
        
        private string[] excludeNetIdsField;
        
        /// <remarks/>
        public ComponentType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("NetId")]
        public string[] IncludeNetIds {
            get {
                return this.includeNetIdsField;
            }
            set {
                this.includeNetIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("NetId")]
        public string[] ExcludeNetIds {
            get {
                return this.excludeNetIdsField;
            }
            set {
                this.excludeNetIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://its.gov/c2c_webservices")]
    public enum ComponentType {
        
        /// <remarks/>
        Collector,
        
        /// <remarks/>
        Extractor,
        
        /// <remarks/>
        Provider,
        
        /// <remarks/>
        CommandReceiver,
        
        /// <remarks/>
        Plugin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelSubscriptionsCompletedEventHandler(object sender, CancelSubscriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSubscriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSubscriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentStatusCompletedEventHandler(object sender, GetCurrentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InfrastructureStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InfrastructureStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetQueueStatusCompletedEventHandler(object sender, GetQueueStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueueStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueueStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void KeepAliveCompletedEventHandler(object sender, KeepAliveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeepAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeepAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LogoutCompletedEventHandler(object sender, LogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueuedSubscribeNetsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueuedSubscribeNetsBlockedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RequestNetsCompletedEventHandler(object sender, RequestNetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestNetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestNetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RequestNetsBlockedCompletedEventHandler(object sender, RequestNetsBlockedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestNetsBlockedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestNetsBlockedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubscribeCompletedEventHandler(object sender, SubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubscribeNetsCompletedEventHandler(object sender, SubscribeNetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeNetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeNetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SubscribeNetsBlockedCompletedEventHandler(object sender, SubscribeNetsBlockedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeNetsBlockedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeNetsBlockedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591